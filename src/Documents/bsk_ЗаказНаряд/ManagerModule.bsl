///////////////////////////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2023, ООО 1С-Софт
// Все права защищены. Эта программа и сопроводительные материалы предоставляются 
// в соответствии с условиями лицензии Attribution 4.0 International (CC BY 4.0)
// Текст лицензии доступен по ссылке:
// https://creativecommons.org/licenses/by/4.0/legalcode
///////////////////////////////////////////////////////////////////////////////////////////////////////

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
		
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "ЗаказНаряд";
	КомандаПечати.Представление = НСтр("ru = 'Заказ-наряд'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Заказ-наряд'");
	КомандаПечати.СписокФорм    = "ФормаДокумента,ФормаСписка";
	КомандаПечати.ДополнительныеПараметры.Вставить("НеВыводитьВКомплекте",Истина);
	КомандаПечати.Порядок       = 10;	
	
КонецПроцедуры

// Сформировать печатные формы объектов
//
// ВХОДЯЩИЕ:
//   ИменаМакетов    - Строка    - Имена макетов, перечисленные через запятую
//   МассивОбъектов  - Массив - Массив ссылок на объекты которые нужно распечатать
//   ПараметрыПечати - Структура - Структура дополнительных параметров печати
//
// ИСХОДЯЩИЕ:
//   КоллекцияПечатныхФорм - Таблица значений - Сформированные табличные документы
//   ПараметрыВывода       - Структура        - Параметры сформированных табличных документов
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "ЗаказНаряд") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "ЗаказНаряд", "Заказ-наряд", 
			ПечатьДокумента(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,"Документ.bsk_ЗаказНаряд.ПФ_MXL_ЗаказНаряд");
	КонецЕсли;
		
КонецПроцедуры



// Функция формирует табличный документ с печатной формой накладной,
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьДокумента(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ЗаказНаряд_Заказ_наряд";
			
	Результаты = ПолучитьДанныеДляПечатнойФормыЗаказНаряд(МассивОбъектов);
	Шапка = Результаты[0].Выбрать();
	Материалы = Результаты[1].Выбрать();
	Работы = Результаты[2].Выбрать();
	
	ПервыйДокумент = Истина;
	
	Пока Шапка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.bsk_ЗаказНаряд.ПФ_MXL_ЗаказНаряд");

		Если НЕ ПервыйДокумент Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
				
		ВывестиЗаголовок(ТабличныйДокумент, Макет, Шапка);
		ВывестиМатериалы(ТабличныйДокумент, Макет, Шапка, Материалы);
		ВывестиРаботы(ТабличныйДокумент, Макет, Шапка, Работы);		
		ВывестиПодвал(ТабличныйДокумент, Макет, Шапка);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);		
	КонецЦикла;

	Возврат ТабличныйДокумент;

КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

// Возвращает реквизиты объекта, которые разрешается редактировать
// с помощью обработки группового изменения реквизитов.
//
// Возвращаемое значение:
//  Массив из Строка
//
Функция РеквизитыРедактируемыеВГрупповойОбработке() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("Автор");	
	Результат.Добавить("Ответственный");	
	Результат.Добавить("Комментарий");
	Возврат Результат;
	
КонецФункции

// Конец СтандартныеПодсистемы.ГрупповоеИзменениеОбъектов

// СтандартныеПодсистемы.Взаимодействия

// Конец СтандартныеПодсистемы.Взаимодействия

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт
	
	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Ответственный, Отключено КАК Ложь)
	|	ИЛИ ЗначениеРазрешено(Автор, Отключено КАК Ложь)";
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

// СтандартныеПодсистемы.ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	
КонецПроцедуры

// Для использования в процедуре ДобавитьКомандыСозданияНаОсновании других модулей менеджеров объектов.
// Добавляет в список команд создания на основании этот объект.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
// Возвращаемое значение:
//  СтрокаТаблицыЗначений, Неопределено - описание добавленной команды.
//
Функция ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт
	
	Команда = СозданиеНаОсновании.ДобавитьКомандуСозданияНаОсновании(КомандыСозданияНаОсновании, Метаданные.Документы.Встреча);
	Если Команда <> Неопределено Тогда
		Команда.ФункциональныеОпции = "ИспользоватьПрочиеВзаимодействия";
		Команда.Важность = "СмТакже";
	КонецЕсли;
	
	Возврат Команда;
	
КонецФункции

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьДанныеДляПечатнойФормыЗаказНаряд(МассивОбъектов)
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	Документ.Автор КАК Автор,
	|	Документ.Ответственный КАК Ответственный,
	|	Документ.Организация,
	|	Документ.Заказчик,
	|	Документ.Плательщик,
	|	Документ.ТранспортноеСредство,
	|	Документ.СуммаДокумента,
	|	Документ.СуммаРабот,
	|	Документ.СуммаМатериалов
	|ИЗ
	|	Документ.bsk_ЗаказНаряд КАК Документ
	|ГДЕ
	|	Документ.Ссылка В (&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Материалы.Ссылка,
	|	Материалы.Номенклатура,
	|	СУММА(Материалы.Количество) КАК Количество,
	|	СУММА(Материалы.Сумма) КАК Сумма
	|ИЗ
	|	Документ.bsk_ЗаказНаряд.Материалы КАК Материалы
	|ГДЕ
	|	Материалы.Ссылка В (&МассивОбъектов)
	|СГРУППИРОВАТЬ ПО
	|	Материалы.Ссылка,
	|	Материалы.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Работы.Ссылка,
	|	Работы.Номенклатура,
	|	СУММА(Работы.Количество) КАК Количество,
	|	СУММА(Работы.Сумма) КАК Сумма
	|ИЗ
	|	Документ.bsk_ЗаказНаряд.Работы КАК Работы
	|ГДЕ
	|	Работы.Ссылка В (&МассивОбъектов)
	|СГРУППИРОВАТЬ ПО
	|	Работы.Ссылка,
	|	Работы.Номенклатура";
	
	Результаты = Запрос.ВыполнитьПакет();
	Возврат Результаты;
КонецФункции

Процедура ВывестиЗаголовок(ТабличныйДокумент, Макет, Шапка)
	
	ОбластьМакета = Макет.ПолучитьОбласть("Заголовок");	
	ОбластьМакета.Параметры.Заполнить(Шапка);		
	ОбластьМакета.Параметры.Заголовок = 
		СтрШаблон("Заказ-наряд %1 от %2",
			ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(Шапка.Номер), Формат(Шапка.Дата, "ДФ=dd.MM.yyyy"));	
	ТабличныйДокумент.Вывести(ОбластьМакета);
КонецПроцедуры

Процедура ВывестиМатериалы(ТабличныйДокумент, Макет, Шапка, Материалы)
	
	ОбластьМакета = Макет.ПолучитьОбласть("Таблица");
	ОбластьМакета.Параметры.Таблица = "Материалы";		
	ТабличныйДокумент.Вывести(ОбластьМакета);
		
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");		
	ТабличныйДокумент.Вывести(ОбластьМакета);
		
	Материалы.Сбросить();НомерСтроки = 1;						
	Пока Материалы.НайтиСледующий(Новый Структура("Ссылка", Шапка.Ссылка)) Цикл 
			
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		ОбластьМакета.Параметры.Заполнить(Материалы);
		ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
		ОбластьМакета.Параметры.ЕдиницаИзмерения = 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Материалы.Номенклатура, "ЕдиницаИзмерения");
		ОбластьМакета.Параметры.Цена = Материалы.Сумма/Материалы.Количество;
		ТабличныйДокумент.Вывести(ОбластьМакета);
			
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
				
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.Таблица = "Материалы";	
	ОбластьМакета.Параметры.Сумма = Шапка.СуммаМатериалов;	
	ТабличныйДокумент.Вывести(ОбластьМакета);
КонецПроцедуры

Процедура ВывестиРаботы(ТабличныйДокумент, Макет, Шапка, Работы)
	
	ОбластьМакета = Макет.ПолучитьОбласть("Таблица");
	ОбластьМакета.Параметры.Таблица = "Работы";		
	ТабличныйДокумент.Вывести(ОбластьМакета);
		
	ОбластьМакета = Макет.ПолучитьОбласть("Шапка");		
	ТабличныйДокумент.Вывести(ОбластьМакета);
						
	Работы.Сбросить();НомерСтроки = 1;
	Пока Работы.НайтиСледующий(Новый Структура("Ссылка", Шапка.Ссылка)) Цикл 
			
		ОбластьМакета = Макет.ПолучитьОбласть("Строка");
		ОбластьМакета.Параметры.Заполнить(Работы);
		ОбластьМакета.Параметры.НомерСтроки = НомерСтроки;
		ОбластьМакета.Параметры.ЕдиницаИзмерения = 
			ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Работы.Номенклатура, "ЕдиницаИзмерения");
		ОбластьМакета.Параметры.Цена = Работы.Сумма/Работы.Количество;
		ТабличныйДокумент.Вывести(ОбластьМакета);
			
		НомерСтроки = НомерСтроки + 1;
	КонецЦикла;
				
	ОбластьМакета = Макет.ПолучитьОбласть("Итого");
	ОбластьМакета.Параметры.Таблица = "Работы";	
	ОбластьМакета.Параметры.Сумма = Шапка.СуммаРабот;	
	ТабличныйДокумент.Вывести(ОбластьМакета);
КонецПроцедуры

Процедура ВывестиПодвал(ТабличныйДокумент, Макет, Шапка)
	
	Валюта = Константы.bsk_ВалютаУчета.Получить();
	
	ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
	ОбластьМакета.Параметры.Заполнить(Шапка);
	ОбластьМакета.Параметры.Итого = СтрШаблон("Итого на сумму %1 %2", Формат(Шапка.СуммаДокумента, "ЧЦ=15; ЧДЦ=2;"), Валюта);
	ОбластьМакета.Параметры.ИтогоПрописью = 
	РаботаСКурсамиВалют.СформироватьСуммуПрописью(Шапка.СуммаДокумента, Валюта); 			
	ТабличныйДокумент.Вывести(ОбластьМакета);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

#КонецОбласти

#КонецЕсли
